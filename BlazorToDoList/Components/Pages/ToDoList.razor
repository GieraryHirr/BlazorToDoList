@page "/to-do-list"

@using Microsoft.AspNetCore.Authorization
@using BlazorToDoList.Services.Interfaces

@inject IToDoService ToDoService
@inject ICprService CprService
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Policy = "AuthenticatedUser")]


@if(Username != null)
{
    <h1>User - @Username</h1>
}

@if (Cpr != null)
{
    <p>CPR - @Cpr</p>
}

@if (Cpr == null)
{
    <input type="number" @bind="_inputCpr" />
    <button @onclick="SubmitCpr">Submit cpr</button>
}

@if (Cpr != null)
{
    <input type="text" @bind="_inputTask" />
    <button @onclick="SubmitTask">Submit task</button>
}

@code {
    private string? _inputCpr;
    private string? _inputTask;
    public string? Username { get; set; }
    public string? Cpr { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        Username = user.Identity?.Name;
        if(Username != null)
        {
            Cpr = await CprService.GetCprNo(Username);
        }
    }

    private async Task SubmitCpr() => Cpr = await CprService.Add(Username, _inputCpr);

    private async Task SubmitTask() => await ToDoService.AddTask(Username, _inputTask);
}
